pipeline:
  migratedb_stage:
    image: node:8
    commands:
      - export DATABASE_URL=$${DATABASE_URL_STAGE}
      - npm i
      - NODE_ENV=migrate npm run migrate
    when:
      event: tag
    secrets:
      - database_url_stage
  migratedb_prod:
    image: node:8
    commands:
      - export DATABASE_URL=$${DATABASE_URL_PROD}
      - npm i
      - NODE_ENV=migrate npm run migrate
    when:
      event: deployment
    secrets:
      - database_url_prod
  build_docker_stage:
    image: plugins/docker
    repo: andyet/talky-api
    tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_TAG##v}
    secrets: [ docker_username, docker_password ]
    when:
      event: [ tag ]
  build_docker_prod:
    image: plugins/docker
    repo: andyet/talky-api
    tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - latest
    secrets: [ docker_username, docker_password ]
    when:
      event: [ deployment ]
  drone_helm_stage:
    image: andyet/drone-helm
    pull: true
    skip_tls_verify: false
    chart: ./charts/swrtc-api
    prefix: staging
    recreate_pods: true
    release: swrtc-api-stage
    values: nodeSelector.swrtc-api-stage=yes,swrtc-ice.nodeSelector.ice-stage=yes,prosody.nodeSelector.prosody-stage=yes,deployment.image.tag=${DRONE_TAG##v},secondaryDomain=stagetalky.io,global.baseDomain=stagesimplewebrtc.com,global.environment=stage,swrtc-ice.deployment.image.tag=0.21,swrtc-ice.config.data.PUBLIC_IP=35.202.210.1,prosody.deployment.image.tag=latest-081018,secrets.data.REDIS_PASSWORD=$${REDIS_PASSWORD},secrets.data.DATABASE_URL=$${DATABASE_URL},secrets.data.TURN_SECRET=$${TURN_SECRET},secrets.data.ADMIN_PASSWORD=$${ADMIN_PASSWORD},secrets.data.CUSTOMER_API_KEY=$${CUSTOMER_API_KEY},secrets.data.INTERNAL_API_KEY=$${INTERNAL_API_KEY},secrets.data.TALKY_LICENSE=$${TALKY_LICENSE}
    secrets: [ staging_REDIS_PASSWORD, staging_DATABASE_URL, staging_TURN_SECRET, staging_ADMIN_PASSWORD, staging_CUSTOMER_API_KEY, staging_INTERNAL_API_KEY, staging_TALKY_LICENSE, staging_KUBERNETES_CERTIFICATE, staging_KUBERNETES_TOKEN, staging_API_SERVER ]
    when:
      event: tag
  drone_helm_prod:
    image: andyet/drone-helm
    pull: true
    skip_tls_verify: false
    chart: ./charts/swrtc-api
    prefix: prod
    recreate_pods: true
    release: swrtc-api-prod
    values: nodeSelector.swrtc-api-prod=yes,swrtc-ice.nodeSelector.ice-prod=yes,prosody.nodeSelector.prosody-prod=yes,deployment.image.tag=latest,secondaryDomain=talky.io,global.baseDomain=simplewebrtc.com,global.environment=prod,swrtc-ice.deployment.image.tag=0.21,swrtc-ice.config.data.PUBLIC_IP=35.193.222.116,prosody.deployment.image.tag=latest-102418,secrets.data.REDIS_PASSWORD=$${REDIS_PASSWORD},secrets.data.DATABASE_URL=$${DATABASE_URL},secrets.data.TURN_SECRET=$${TURN_SECRET},secrets.data.ADMIN_PASSWORD=$${ADMIN_PASSWORD},secrets.data.CUSTOMER_API_KEY=$${CUSTOMER_API_KEY},secrets.data.INTERNAL_API_KEY=$${INTERNAL_API_KEY},secrets.data.TALKY_LICENSE=$${TALKY_LICENSE}
    secrets: [ prod_REDIS_PASSWORD, prod_DATABASE_URL, prod_TURN_SECRET, prod_ADMIN_PASSWORD, prod_CUSTOMER_API_KEY, prod_INTERNAL_API_KEY, prod_TALKY_LICENSE, prod_KUBERNETES_CERTIFICATE, prod_KUBERNETES_TOKEN, prod_API_SERVER ]
    when:
      event: deployment
  slack:
    image: plugins/slack
    username: drone
    channel: io-alerts
    secrets: [ slack_webhook ]
    when:
      status: [ success, failure ]
branches: master
