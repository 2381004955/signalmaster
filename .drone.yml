pipeline:
  migratedb_stage:
    image: node:8
    commands:
      - export DATABASE_URL=$${DATABASE_URL_STAGE}
      - npm i
      - NODE_ENV=migrate npm run migrate
    when:
      event: tag
    secrets:
      - database_url_stage
  migratedb_prod:
    image: node:8
    commands:
      - export DATABASE_URL=$${DATABASE_URL_PROD}
      - npm i
      - NODE_ENV=migrate npm run migrate
    when:
      event: deployment
    secrets:
      - database_url_prod
  build_docker_stage:
    image: plugins/docker
    repo: andyet/talky-api
    tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_TAG##v}
    secrets: [ docker_username, docker_password ]
    when:
      event: [ tag ]
  build_docker_prod:
    image: plugins/docker
    repo: andyet/talky-api
    tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - latest
    secrets: [ docker_username, docker_password ]
    when:
      event: [ deployment ]
  drone_helm_stage:
    image: ipedrazas/drone-helm
    pull: true
    debug: true
    skip_tls_verify: false
    chart: ./charts/swrtc-api
    prefix: staging
    recreate_pods: true
    release: swrtc-api-stage
    values: deployment.image.tag=${DRONE_TAG##v},nodeSelector.swrtc-api-stage=true,global.baseDomain=stagesimplewebrtc.com,global.environment=stage,swrtc-ice.nodeSelector.ice-stage=true,swrtc-ice.deployment.image.tag=0.21,prosody.nodeSelector.prosody-stage=true,prosody.deployment.image.tag=latest-081018
    secrets: [ staging_REDIS_PASSWORD, staging_DATABASE_URL, staging_TURN_SECRET, staging_ADMIN_PASSWORD, staging_CUSTOMER_API_KEY, staging_INTERNAL_API_KEY, staging_TALKY_LICENSE, staging_TAG=${DRONE_TAG##v},staging_KUBERNETES_CERTIFICATE, staging_KUBERNETES_TOKEN, staging_API_SERVER ]
    when:
      event: tag
  drone_helm_prod:
    image: andyet/drone-helm:latest
    pull: true
    skip_tls_verify: false
    chart: ./charts/swrtc-api
    prefix: staging
    recreate_pods: true
    release: swrtc-api-stage
    secrets: [ staging_KUBERNETES_CERTIFICATE, staging_KUBERNETES_TOKEN, staging_API_SERVER ]
    when:
      event: tag
  deploy_prod:
    image: quay.io/honestbee/drone-kubernetes
    kubernetes_server: ${KUBERNETES_SERVER}
    kubernetes_cert: ${KUBERNETES_CERT}
    kubernetes_token: ${KUBERNETES_TOKEN}
    deployment: swrtc-api-prod
    repo: andyet/talky-api
    container: api-prod
    namespace: default
    tag: ${DRONE_COMMIT_SHA:0:8}
    when:
      event: deployment
    secrets: [ kubernetes_cert, kubernetes_server, kubernetes_token ]
  slack:
    image: plugins/slack
    username: drone
    channel: io-alerts
    secrets: [ slack_webhook ]
    when:
      status: [ success, failure ]
branches: master
