pipeline:
  migratedb_stage:
    image: node:8
    commands:
      - export DATABASE_URL=$${DATABASE_URL_STAGE}
      - npm i
      - NODE_ENV=migrate npm run migrate
    when:
      event: tag
    secrets:
      - database_url_stage
  migratedb_prod:
    image: node:8
    commands:
      - export DATABASE_URL=$${DATABASE_URL_PROD}
      - npm i
      - NODE_ENV=migrate npm run migrate
    when:
      event: deployment
    secrets:
      - database_url_prod
  build_docker_stage:
    image: plugins/docker
    repo: andyet/talky-api
    tags:
      - "${DRONE_COMMIT_SHA:0:8}"
      - "${DRONE_TAG##v}"
    secrets: [ docker_username, docker_password ]
    when:
      event: [ tag ]
  build_docker_prod:
    image: plugins/docker
    repo: andyet/talky-api
    tags:
      - "${DRONE_COMMIT_SHA:0:8}"
      - latest
    secrets: [ docker_username, docker_password ]
    when:
      event: [ deployment ]
  drone_helm_stage:
    image: andyet/drone-helm
    pull: true
    debug: true
    dry-run: true
    skip_tls_verify: false
    chart: andyet/swrtc-api
    prefix: staging
    recreate_pods: true
    helm_repos: andyet=https://andyet-helm-charts.storage.googleapis.com/
    release: swrtc-api-stage
    values_files: values-stage.yaml
    values: deployment.image.repository=andyet/talky-api:${DRONE_TAG##v},secrets.data.REDIS_PASSWORD=$${REDIS_PASSWORD},secrets.data.DATABASE_URL=$${DATABASE_URL},secrets.data.TURN_SECRET=$${TURN_SECRET},secrets.data.ADMIN_PASSWORD=$${ADMIN_PASSWORD},secrets.data.CUSTOMER_API_KEY=$${CUSTOMER_API_KEY},secrets.data.INTERNAL_API_KEY=$${INTERNAL_API_KEY},secrets.data.TALKY_LICENSE=$${TALKY_LICENSE}
    secrets:
      - staging_ADMIN_PASSWORD
      - staging_API_SERVER
      - staging_CUSTOMER_API_KEY
      - staging_DATABASE_URL
      - staging_INTERNAL_API_KEY
      - staging_KUBERNETES_CERTIFICATE
      - staging_KUBERNETES_TOKEN
      - staging_REDIS_PASSWORD
      - staging_TALKY_LICENSE
      - staging_TURN_SECRET
    when:
      event: tag
  drone_helm_prod:
    image: andyet/drone-helm
    pull: true
    skip_tls_verify: false
    chart: andyet/swrtc-api
    prefix: prod
    recreate_pods: true
    helm_repos: andyet=https://andyet-helm-charts.storage.googleapis.com/
    release: swrtc-api-prod
    values_files: values-prod.yaml
    values: deployment.image.repository=andyet/talky-api:${DRONE_COMMIT_SHA:0:8},secrets.data.REDIS_PASSWORD=$${REDIS_PASSWORD},secrets.data.DATABASE_URL=$${DATABASE_URL},secrets.data.TURN_SECRET=$${TURN_SECRET},secrets.data.ADMIN_PASSWORD=$${ADMIN_PASSWORD},secrets.data.CUSTOMER_API_KEY=$${CUSTOMER_API_KEY},secrets.data.INTERNAL_API_KEY=$${INTERNAL_API_KEY},secrets.data.TALKY_LICENSE=$${TALKY_LICENSE}
    secrets:
      - prod_ADMIN_PASSWORD
      - prod_API_SERVER
      - prod_CUSTOMER_API_KEY
      - prod_DATABASE_URL
      - prod_INTERNAL_API_KEY
      - prod_KUBERNETES_CERTIFICATE
      - prod_KUBERNETES_TOKEN
      - prod_REDIS_PASSWORD
      - prod_TALKY_LICENSE
      - prod_TURN_SECRET
    when:
      event: deployment
  slack:
    image: andyet/drone-slack:stable
    username: drone
    pull: true
    channel: io-alerts
    secrets: [ slack_webhook, github_access_token, github_slack_lookup ]
    when:
      status: [ success, failure ]
branches: master
